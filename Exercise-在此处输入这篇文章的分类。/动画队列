<!DOCTYPE HTML>
<html>
<head><meta name="generator" content="Hexo 3.8.0">
  <meta charset="utf-8">
  
  <title>动画队列 › he</title>
  <meta name="author" content="何方">
  
  <meta name="description" content="动画队列jQuery中有个动画队列的机制。当我们对一个对象添加多次动画效果时后添加的动作就会被放入这个动画队列中，等前面的动画完成后再开始执行。可是用户的操作往往都比动画快，如果用户对一个对象频繁操作时不处理动画队列就会造成队列堆积，影响到效果。
.stop( [clearQueue ] [, ju">
  
  
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <meta property="og:title" content="动画队列">
  <meta property="og:site_name" content="he">

  
    <meta property="og:image" content>
  

  <link href="/favicon.png" rel="icon">
  <link rel="alternate" href="/atom.xml" title="he" type="application/atom+xml">
  <link rel="stylesheet" href="/css/style.css" media="screen" type="text/css">
  <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
  

</head>
</html>

<body>
  <header id="header"><div class="meta inner">
  <h1><a href="/">he</a></h1>
  <h2><a href="/"></a></h2>
  <nav id="main-nav">
    <ul>
      
      <li><a href="/about">About</a></li>
      
      <li><a href="/archives">Archives</a></li>
      
      <li><a href="/atom.xml">RSS</a></li>
      
    </ul>
    <div class="clearfix"></div>
  </nav>
</div>
<div class="clearfix"></div>
</header>
  <div id="content" class="inner">
    <div id="main-col" class="alignleft"><div id="wrapper"><article class="post">
  <div class="post-content">
    <header>
      
  
    <h1 class="title">动画队列</h1>
  

      
        <time datetime="2018-12-11T12:08:40.000Z">2018-12-11</time>
      
    </header>
    <div class="entry">
      
        <h2 id="动画队列"><a href="#动画队列" class="headerlink" title="动画队列"></a>动画队列</h2><p>jQuery中有个动画队列的机制。当我们对一个对象添加多次动画效果时后添加的动作就会被放入这个动画队列中，等前面的动画完成后再开始执行。可是用户的操作往往都比动画快，如果用户对一个对象频繁操作时不处理动画队列就会造成队列堆积，影响到效果。</p>
<h3 id="stop-clearQueue-jumpToEnd-（添加版本1-2）"><a href="#stop-clearQueue-jumpToEnd-（添加版本1-2）" class="headerlink" title=".stop( [clearQueue ] [, jumpToEnd ] )（添加版本1.2）"></a>.stop( [clearQueue ] [, jumpToEnd ] )（添加版本1.2）</h3><p>clearQueue<br>类型: Boolean<br>一个布尔值，指示是否取消以列队动画。默认 false.<br>jumpToEnd<br>类型: Boolean<br>一个布尔值指示是否当前动画立即完成。默认false.</p>
<h3 id="stop-queue-clearQueue-jumpToEnd-（添加版本1-7）"><a href="#stop-queue-clearQueue-jumpToEnd-（添加版本1-7）" class="headerlink" title=".stop( [queue ] [, clearQueue ] [, jumpToEnd ] )（添加版本1.7）"></a>.stop( [queue ] [, clearQueue ] [, jumpToEnd ] )（添加版本1.7）</h3><p>queue<br>类型: String<br>停止动画队列的名称。<br>clearQueue<br>类型: Boolean<br>一个布尔值，指示是否取消以列队动画。默认 false.<br>jumpToEnd<br>类型: Boolean<br>一个布尔值指示是否当前动画立即完成。默认false.<br>jQuery中有stop这个方法可以停止当前执行的动画，并且它有两个布尔参数，默认值都为false。</p>
<pre><code>clearQueue(default: false)
jumpToEnd(default: false)
</code></pre><p>第一个参数为true时会清空动画队列，第二个参数为true时会瞬间完成掉当前动画。所以，我们经常使用obj.stop(true,true)来停止动画。但是这还不够！正如jQuery文档中的说法，即使第二个参数为true，也仅仅是把当前在执行的动画跳转到完成状态。这时第一个参数如果也为true，后面的队列就会被清空。如果一个效果需要多个动画同时处理，我们仅完成其中的一个而把后面的队列丢弃了，这就会出现意料之外的结果。</p>
<p>###<br>我们可以看到如下整理结果:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>stop()</td>
<td></td>
<td>清空队列，当前执行动作立即停止。后续动作会不再执行。 等同于：stop(false,false)</td>
</tr>
<tr>
<td>stop(true)</td>
<td>[clearQueue]</td>
<td>清空队列，当前执行动作立即停止。后续动作会不再执行</td>
</tr>
<tr>
<td>stop(true,true)</td>
<td>[clearQueue],[gotoEnd]</td>
<td>清空队列，当前执行动作<font color="red" size="5">立即完成</font>。后续动作会不再执行</td>
</tr>
<tr>
<td>stop(true,false)</td>
<td>[clearQueue],[gotoEnd]</td>
<td>清空队列，当前执行动作立即停止。后续动作会不再执行</td>
</tr>
<tr>
<td>stop(false)</td>
<td>[clearQueue]</td>
<td>不清空队列，当前执行动作立即停止。后续动作会立即执行</td>
</tr>
<tr>
<td>stop(false,true)</td>
<td>[clearQueue],[gotoEnd]</td>
<td>不清空队列，当前执行动作<font color="red" size="5">立即完成</font>。后续动作会立即执行</td>
</tr>
<tr>
<td>stop(false,false)</td>
<td>[clearQueue],[gotoEnd]</td>
<td>不清空队列，当前执行动作立即停止。后续动作会立即执行</td>
</tr>
</tbody>
</table>

      
    </div>
      
      <footer>
        
  
  <div class="categories">
    <a href="/categories/Exercise-在此处输入这篇文章的分类。/">Exercise   //在此处输入这篇文章的分类。</a>
  </div>

        
        
  <div class="addthis addthis_toolbox addthis_default_style">
    
      <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
    
    
      <a class="addthis_button_tweet"></a>
    
    
      <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
    
    
      <a class="addthis_button_pinterest_pinit" pi:pinit:layout="horizontal"></a>
    
    <a class="addthis_counter addthis_pill_style"></a>
  </div>
  <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js"></script>

      
      <div class="clearfix"></div>
      </footer>
  </div>
</article>


<section id="comment">
  
</section>


</div></div>
    <aside id="sidebar" class="alignright">
  <div class="search">
  <form action="//google.com/search" method="get" accept-charset="utf-8">
    <input type="search" name="q" results="0" placeholder="Search">
    <input type="hidden" name="q" value="site:hefang.site">
  </form>
</div>

  
<div class="widget tag">
  <h3 class="title">Recent Posts</h3>
  <ul class="entry">
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/常见排序算法">常见排序算法</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/原型与原型链">原型与原型链</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/动画队列">动画队列</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/js作用域相关介绍">js作用域</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/介绍浏览器的渲染机制">浏览器的渲染机制</a>
      </li>
    
  </ul>
</div>


  
<div class="widget tag">
  <h3 class="title">Categories</h3>
  <ul class="entry">
  
    <li><a href="/categories/Exercise-在此处输入这篇文章的分类。/">Exercise   //在此处输入这篇文章的分类。</a><small>11</small></li>
  
  </ul>
</div>


  
</aside>
    <div class="clearfix"></div>
  </div>
  <footer id="footer" class="inner"><div class="alignleft">
  
  &copy; 2019 何方
  
</div>
<div class="clearfix"></div></footer>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>



</body>
</html>

