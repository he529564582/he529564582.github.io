<!DOCTYPE HTML>
<html>
<head><meta name="generator" content="Hexo 3.8.0">
  <meta charset="utf-8">
  
  <title>常见排序算法 › he</title>
  <meta name="author" content="何方">
  
  <meta name="description" content="常见排序算法 - 冒泡排序 (Bubble Sort)冒泡排序算法的流程如下：1、比较相邻的元素。如果第一个比第二个大，就交换他们两个。2、对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。3、针对所有的元素重复以上的步骤，除了最后一个。4、持续每次对">
  
  
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <meta property="og:title" content="常见排序算法">
  <meta property="og:site_name" content="he">

  
    <meta property="og:image" content>
  

  <link href="/favicon.png" rel="icon">
  <link rel="alternate" href="/atom.xml" title="he" type="application/atom+xml">
  <link rel="stylesheet" href="/css/style.css" media="screen" type="text/css">
  <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
  

</head>
</html>

<body>
  <header id="header"><div class="meta inner">
  <h1><a href="/">he</a></h1>
  <h2><a href="/"></a></h2>
  <nav id="main-nav">
    <ul>
      
      <li><a href="/about">About</a></li>
      
      <li><a href="/archives">Archives</a></li>
      
      <li><a href="/atom.xml">RSS</a></li>
      
    </ul>
    <div class="clearfix"></div>
  </nav>
</div>
<div class="clearfix"></div>
</header>
  <div id="content" class="inner">
    <div id="main-col" class="alignleft"><div id="wrapper"><article class="post">
  <div class="post-content">
    <header>
      
  
    <h1 class="title">常见排序算法</h1>
  

      
        <time datetime="2019-05-21T06:48:42.894Z">2019-05-21</time>
      
    </header>
    <div class="entry">
      
        <h3 id="常见排序算法-冒泡排序-Bubble-Sort"><a href="#常见排序算法-冒泡排序-Bubble-Sort" class="headerlink" title="常见排序算法 - 冒泡排序 (Bubble Sort)"></a>常见排序算法 - 冒泡排序 (Bubble Sort)</h3><h4 id="冒泡排序算法的流程如下："><a href="#冒泡排序算法的流程如下：" class="headerlink" title="冒泡排序算法的流程如下："></a>冒泡排序算法的流程如下：</h4><p>1、比较相邻的元素。如果第一个比第二个大，就交换他们两个。<br>2、对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。<br>3、针对所有的元素重复以上的步骤，除了最后一个。<br>4、持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p>
<h5 id="实例分析："><a href="#实例分析：" class="headerlink" title="实例分析："></a>实例分析：</h5><p>以数组 arr = [5, 1, 4, 2, 8] 为例说明，加粗的数字表示每次循环要比较的两个数字：<br>第一次外循环</p>
<pre><code>( 5 1 4 2 8 ) → ( 1 5 4 2 8 )， 5 &gt; 1 交换位置
( 1 5 4 2 8 ) → ( 1 4 5 2 8 )， 5 &gt; 4 交换位置
( 1 4 5 2 8 ) → ( 1 4 2 5 8 )， 5 &gt; 2 交换位置
( 1 4 2 5 8 ) → ( 1 4 2 5 8 )， 5 &lt; 8 位置不变
</code></pre><p>第二次外循环（除开最后一个元素8，对剩余的序列）</p>
<pre><code>( 1 4 2 5 8 ) → ( 1 4 2 5 8 )， 1 &lt; 4 位置不变
( 1 4 2 5 8 ) → ( 1 2 4 5 8 )， 4 &gt; 2 交换位置
( 1 2 4 5 8 ) → ( 1 2 4 5 8 )， 4 &lt; 5 位置不变
</code></pre><p>第三次外循环（除开已经排序好的最后两个元素，可以注意到上面的数组其实已经排序完成，但是程序本身并不知道，所以还要进行后续的循环，直到剩余的序列为 1）</p>
<pre><code>( 1 2 4 5 8 ) → ( 1 2 4 5 8 )
( 1 2 4 5 8 ) → ( 1 2 4 5 8 )
</code></pre><p>第四次外循环（最后一次）</p>
<pre><code>( 1 2 4 5 8 ) → ( 1 2 4 5 8 )
</code></pre><h4 id="JavaScript-语言实现"><a href="#JavaScript-语言实现" class="headerlink" title="JavaScript 语言实现"></a>JavaScript 语言实现</h4><pre><code>function bubbleSort(array) {
var length = array.length,
i,
j,
temp;
for (i = length - 1; 0 &lt; i; i--) {
for (j = 0; j &lt; i; j++) {
        if (array[j] &gt; array[j + 1]) {
        temp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = temp;
        }
}
}
return array;
}
</code></pre><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p><a href="https://www.processon.com/view/link/5ce3a2f1e4b0e03e4216ac80" target="_blank" rel="noopener">预览地址</a></p>
<h3 id="常见排序算法-选择排序-Selection-Sort"><a href="#常见排序算法-选择排序-Selection-Sort" class="headerlink" title="常见排序算法 - 选择排序 (Selection Sort)"></a>常见排序算法 - 选择排序 (Selection Sort)</h3><h4 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h4><p>选择排序（Selection Sort）是一种简单直观的排序算法。它的工作原理如下，首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>
<p>选择排序的主要优点与数据移动有关。如果某个元素位于正确的最终位置上，则它不会被移动。选择排序每次交换一对元素，它们当中至少有一个将被移到其最终位置上，因此对n个元素的序列进行排序总共进行至多n-1次交换。在所有的完全依靠交换去移动元素的排序方法中，选择排序属于非常好的一种。</p>
<h5 id="实例分析：-1"><a href="#实例分析：-1" class="headerlink" title="实例分析："></a>实例分析：</h5><p>以数组 arr = [8, 5, 2, 6, 9, 3, 1, 4, 0, 7] 为例，先直观看一下每一步的变化，后面再介绍细节<br>第一次从数组 [8, 5, 2, 6, 9, 3, 1, 4, 0, 7] 中找到最小的数 0，放到数组的最前面（与第一个元素进行交换）：</p>
<pre><code>                               min
                                ↓
8   5   2   6   9   3   1   4   0   7
↑                               ↑
└───────────────────────────────┘
</code></pre><p>交换后：</p>
<pre><code>0   5   2   6   9   3   1   4   8   7
</code></pre><p>在剩余的序列中 [5, 2, 6, 9, 3, 1, 4, 8, 7] 中找到最小的数 1，与该序列的第一个个元素进行位置交换：</p>
<pre><code>                       min
                        ↓
0   5   2   6   9   3   1   4   8   7
↑                   ↑
└───────────────────┘
</code></pre><p>交换后：</p>
<pre><code>0   1   2   6   9   3   5   4   8   7
</code></pre><p>在剩余的序列中 [2, 6, 9, 3, 5, 4, 8, 7] 中找到最小的数 2，与该序列的第一个个元素进行位置交换（实际上不需要交换）：</p>
<pre><code>       min
        ↓
0   1   2   6   9   3   5   4   8   7
        ↑
</code></pre><p> 重复上述过程，直到最后一个元素就完成了排序。</p>
<pre><code>                   min
                    ↓
0   1   2   6   9   3   5   4   8   7
            ↑       ↑
            └───────┘
                           min
                            ↓
0   1   2   3   9   6   5   4   8   7
                ↑           ↑
                └───────────┘
                       min
                        ↓
0   1   2   3   4   6   5   9   8   7
                    ↑   ↑
                    └───┘
                       min
                        ↓
0   1   2   3   4   5   6   9   8   7
                        ↑   
                                   min
                                    ↓
0   1   2   3   4   5   6   9   8   7
                            ↑       ↑
                            └───────┘  
                               min
                                ↓
0   1   2   3   4   5   6   7   8   9
                                ↑      
                                   min
                                    ↓
0   1   2   3   4   5   6   7   8   9
                                    ↑
</code></pre><h4 id="JavaScript-语言实现-1"><a href="#JavaScript-语言实现-1" class="headerlink" title="JavaScript 语言实现"></a>JavaScript 语言实现</h4><pre><code>function selectionSort(array) {
var length = array.length,
i,
j,
minIndex,
minValue,
temp;
for (i = 0; i &lt; length - 1; i++) {
minIndex = i;
minValue = array[minIndex];
for (j = i + 1; j &lt; length; j++) {
if (array[j] &lt; minValue) {
        minIndex = j;
        minValue = array[minIndex];
}
}
// 交换位置
temp = array[i];
array[i] = minValue;
array[minIndex] = temp;
}
return array
}
</code></pre><h4 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h4><p><a href="https://www.processon.com/view/link/5ce3b60de4b0f34230d661f4" target="_blank" rel="noopener">预览地址</a></p>

      
    </div>
      
      <footer>
        
  
  <div class="categories">
    <a href="/categories/Exercise-在此处输入这篇文章的分类。/">Exercise   //在此处输入这篇文章的分类。</a>
  </div>

        
        
  <div class="addthis addthis_toolbox addthis_default_style">
    
      <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
    
    
      <a class="addthis_button_tweet"></a>
    
    
      <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
    
    
      <a class="addthis_button_pinterest_pinit" pi:pinit:layout="horizontal"></a>
    
    <a class="addthis_counter addthis_pill_style"></a>
  </div>
  <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js"></script>

      
      <div class="clearfix"></div>
      </footer>
  </div>
</article>


<section id="comment">
  
</section>


</div></div>
    <aside id="sidebar" class="alignright">
  <div class="search">
  <form action="//google.com/search" method="get" accept-charset="utf-8">
    <input type="search" name="q" results="0" placeholder="Search">
    <input type="hidden" name="q" value="site:hefang.site">
  </form>
</div>

  
<div class="widget tag">
  <h3 class="title">Recent Posts</h3>
  <ul class="entry">
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/常见排序算法">常见排序算法</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/原型与原型链">原型与原型链</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/动画队列">动画队列</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/js作用域相关介绍">js作用域</a>
      </li>
    
      <li>
        <a href="/Exercise-在此处输入这篇文章的分类。/介绍浏览器的渲染机制">浏览器的渲染机制</a>
      </li>
    
  </ul>
</div>


  
<div class="widget tag">
  <h3 class="title">Categories</h3>
  <ul class="entry">
  
    <li><a href="/categories/Exercise-在此处输入这篇文章的分类。/">Exercise   //在此处输入这篇文章的分类。</a><small>11</small></li>
  
  </ul>
</div>


  
</aside>
    <div class="clearfix"></div>
  </div>
  <footer id="footer" class="inner"><div class="alignleft">
  
  &copy; 2019 何方
  
</div>
<div class="clearfix"></div></footer>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>



</body>
</html>

